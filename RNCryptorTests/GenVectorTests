#!/usr/bin/env ruby

require 'optparse'
require File.join(File.dirname(__FILE__), '../Spec/vectors', 'vectorparser')

@options = {}


def NSDictionaryForHash(hash)
  "@{\n" + hash.collect { |key, value| %Q(    @"#{key}": @"#{value}") }.join(",\n") + "}"
end

def outputTestsForFile(output, name)

  VectorParser.new(@options[:v3_directory] + "/" + name).vectors.each do |vector|
    output << <<-TEST_CASE

- (void)test_#{name}_#{vector["title"].gsub(' ', '_')} {
  [self verify_#{name}:#{NSDictionaryForHash(vector)}];
}

TEST_CASE

  end
end

opt_parser = OptionParser.new do |opt|
  opt.banner = "Usage: GenVectorTest -o VectorTests.m -3 v3_directory"
  opt.separator  ""
  opt.on("-o","--output PATH","path to output code") do |output_path|
    @options[:output_path] = output_path
  end
  opt.on("-3", "-3 PATH", "path to v3 directory") do |v3_directory|
    @options[:v3_directory] = v3_directory
  end
end

opt_parser.parse!

raise OptionParser::MissingArgument if @options[:output_path].nil?
raise OptionParser::MissingArgument if @options[:v3_directory].nil?

File.open(@options[:output_path], "w") do |output|
  output << <<-HEADER
// Automatically Generated by GenVectorTests
#import "XCTestCase+RNCryptorVectorTests.h"
@interface RNCryptorGeneratedVectorTests : XCTestCase
@end
@implementation RNCryptorGeneratedVectorTests
HEADER

  outputTestsForFile(output, "kdf");
  outputTestsForFile(output, "kdf_short");

  output<< <<-FOOTER
@end
FOOTER

end
